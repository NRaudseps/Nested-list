<?php


namespace Feature;


use App\Bootstrap\Database;
use GuzzleHttp\Client;
use PHPUnit\Framework\TestCase;

class LoginTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $db = (new Database())
            ->query('../../')
            ->insert('users')
            ->values([
                'username' => '?',
                'email' => '?',
                'password' => '?',
            ])
            ->setParameter(0, 'jon')
            ->setParameter(1, 'jon@example.com')
            ->setParameter(2, password_hash('password', PASSWORD_BCRYPT))
            ->execute();
    }


    /** @test */
    public function a_login_page_exists()
    {
        $client = new Client(['base_uri' => 'http://localhost:8000']);

        $response = $client->request('GET', '/login');

        $this->assertEquals(200, $response->getStatusCode());
    }

    /** @test */
    public function a_successful_login_will_redirect_to_a_dashboard()
    {
        $this->setUp();
        $client = new Client(['base_uri' => 'http://localhost:8000']);
        $response = $client->request('POST', '/login', [
            'form_params' => [
                'email' => 'jon@example.com',
                'password' => 'password'
            ],
            'allow_redirects' => false
        ]);

        $this->assertEquals(302, $response->getStatusCode());

        $this->deleteTestInputFromDatabase('jon');
    }

    protected function deleteTestInputFromDatabase(string $username): void
    {
        (new Database())
            ->query('../../')
            ->delete('users')
            ->where('username = :username')
            ->setParameter('username', $username)
            ->execute();
    }
}